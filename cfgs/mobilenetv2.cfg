[net]
# Testing
# batch = 1
# subdivisions = 1
# Training
batch = 64
subdivisions = 2
width = 416
height = 416
channels = 3
momentum = 0.9
decay = 0.0005
angle = 0
saturation = 1.5
exposure = 1.5
hue = .1

learning_rate = 0.001
burn_in = 1000
max_batches = 500200
policy = steps
steps = 400000,450000
scales = .1,.1

# ConvBNReLU
[convolutional]
batch_normalize = 1
filters = 32
size = 3
stride = 2
pad = 1
activation = relu6

# Inverted Residual 1
[convolutional]
batch_normalize = 1
filters = 32
size = 3
stride = 1
pad = 1
groups = 32
activation = relu
[convolutional]
batch_normalize = 1
filters = 16
size = 1
stride = 1
pad = 0

# Inverted Residual 2
[convolutional]
batch_normalize = 1
filters = 96
size = 1
stride = 1
pad = 0
groups = 96
activation = relu6
[convolutional]
batch_normalize = 1
filters = 96
size = 3
stride = 2
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 24
size = 1
stride = 1
pad = 0

# Inverted Residual 3
[convolutional]
batch_normalize = 1
filters = 144
size = 1
stride = 1
pad = 0
groups = 144
activation = relu6
[convolutional]
batch_normalize = 1
filters = 144
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 24
size = 1
stride = 1
pad = 0

# Inverted Residual 4
[convolutional]
batch_normalize = 1
filters = 144
size = 1
stride = 1
pad = 0
groups = 144
activation = relu6
[convolutional]
batch_normalize = 1
filters = 144
size = 3
stride = 2
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 32
size = 1
stride = 1
pad = 0

# Inverted Residual 5
[convolutional]
batch_normalize = 1
filters = 192
size = 1
stride = 1
pad = 0
groups = 192
activation = relu6
[convolutional]
batch_normalize = 1
filters = 192
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 32
size = 1
stride = 1
pad = 0

# Inverted Residual 6
[convolutional]
batch_normalize = 1
filters = 192
size = 1
stride = 1
pad = 0
groups = 192
activation = relu6
[convolutional]
batch_normalize = 1
filters = 192
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 32
size = 1
stride = 1
pad = 0

# Inverted Residual 7
[convolutional]
batch_normalize = 1
filters = 192
size = 1
stride = 1
pad = 0
groups = 192
activation = relu6
[convolutional]
batch_normalize = 1
filters = 192
size = 3
stride = 2
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 64
size = 1
stride = 1
pad = 0

# Inverted Residual 8
[convolutional]
batch_normalize = 1
filters = 384
size = 1
stride = 1
pad = 0
groups = 384
activation = relu6
[convolutional]
batch_normalize = 1
filters = 384
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 64
size = 1
stride = 1
pad = 0

# Inverted Residual 9
[convolutional]
batch_normalize = 1
filters = 384
size = 1
stride = 1
pad = 0
groups = 384
activation = relu6
[convolutional]
batch_normalize = 1
filters = 384
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 64
size = 1
stride = 1
pad = 0

# Inverted Residual 10
[convolutional]
batch_normalize = 1
filters = 384
size = 1
stride = 1
pad = 0
groups = 384
activation = relu6
[convolutional]
batch_normalize = 1
filters = 384
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 64
size = 1
stride = 1
pad = 0

# Inverted Residual 11
[convolutional]
batch_normalize = 1
filters = 384
size = 1
stride = 1
pad = 0
groups = 384
activation = relu6
[convolutional]
batch_normalize = 1
filters = 384
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 96
size = 1
stride = 1
pad = 0

# Inverted Residual 12
[convolutional]
batch_normalize = 1
filters = 384
size = 1
stride = 1
pad = 0
groups = 384
activation = relu6
[convolutional]
batch_normalize = 1
filters = 384
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 96
size = 1
stride = 1
pad = 0

# Inverted Residual 13
[convolutional]
batch_normalize = 1
filters = 576
size = 1
stride = 1
pad = 0
groups = 576
activation = relu6
[convolutional]
batch_normalize = 1
filters = 576
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 96
size = 1
stride = 1
pad = 0

# Inverted Residual 14
[convolutional]
batch_normalize = 1
filters = 576
size = 1
stride = 1
pad = 0
groups = 576
activation = relu6
[convolutional]
batch_normalize = 1
filters = 576
size = 3
stride = 2
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 160
size = 1
stride = 1
pad = 0

# Inverted Residual 15
[convolutional]
batch_normalize = 1
filters = 960
size = 1
stride = 1
pad = 0
groups = 960
activation = relu6
[convolutional]
batch_normalize = 1
filters = 960
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 160
size = 1
stride = 1
pad = 0

# Inverted Residual 16
[convolutional]
batch_normalize = 1
filters = 960
size = 1
stride = 1
pad = 0
groups = 960
activation = relu6
[convolutional]
batch_normalize = 1
filters = 960
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 160
size = 1
stride = 1
pad = 0

# Inverted Residual 17
[convolutional]
batch_normalize = 1
filters = 960
size = 1
stride = 1
pad = 0
groups = 960
activation = relu6
[convolutional]
batch_normalize = 1
filters = 960
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 160
size = 1
stride = 1
pad = 0

# Inverted Residual 18
[convolutional]
batch_normalize = 1
filters = 960
size = 1
stride = 1
pad = 0
groups = 960
activation = relu6
[convolutional]
batch_normalize = 1
filters = 960
size = 3
stride = 1
pad = 1
activation = relu6
[convolutional]
batch_normalize = 1
filters = 160
size = 1
stride = 1
pad = 0

# deep conv 5
[convolutional]
batch_normalize = 1
filters = 256
size = 3
stride = 1
pad = 1
groups = 256
activation = relu
[convolutional]
batch_normalize = 1
filters = 256
size = 1
stride = 1
pad = 0
activation = relu6

# deep conv 6
[convolutional]
batch_normalize = 1
filters = 256
size = 3
stride = 2
pad = 1
groups = 256
activation = relu
[convolutional]
batch_normalize = 1
filters = 512
size = 1
stride = 1
pad = 0
activation = relu6

# deep conv 7
[convolutional]
batch_normalize = 1
filters = 512
size = 3
stride = 1
pad = 1
groups = 512
activation = relu
[convolutional]
batch_normalize = 1
filters = 512
size = 1
stride = 1
pad = 0
activation = relu6

# deep conv 8_1
[convolutional]
batch_normalize = 1
filters = 512
size = 3
stride = 1
pad = 1
groups = 512
activation = relu
[convolutional]
batch_normalize = 1
filters = 512
size = 1
stride = 1
pad = 0
activation = relu6

# deep conv 8_2
[convolutional]
batch_normalize = 1
filters = 512
size = 3
stride = 1
pad = 1
groups = 512
activation = relu
[convolutional]
batch_normalize = 1
filters = 512
size = 1
stride = 1
pad = 0
activation = relu6

# deep conv 8_3
[convolutional]
batch_normalize = 1
filters = 512
size = 3
stride = 1
pad = 1
groups = 512
activation = relu
[convolutional]
batch_normalize = 1
filters = 512
size = 1
stride = 1
pad = 0
activation = relu6

# deep conv 8_4
[convolutional]
batch_normalize = 1
filters = 512
size = 3
stride = 1
pad = 1
groups = 512
activation = relu
[convolutional]
batch_normalize = 1
filters = 512
size = 1
stride = 1
pad = 0
activation = relu6

# deep conv 8_5
[convolutional]
batch_normalize = 1
filters = 512
size = 3
stride = 2
pad = 1
groups = 512
activation = relu
[convolutional]
batch_normalize = 1
filters = 1024
size = 1
stride = 1
pad = 0
activation = relu6

# deep conv 9
[convolutional]
batch_normalize = 1
filters = 1024
size = 3
stride = 1
pad = 1
groups = 1024
activation = relu
[convolutional]
batch_normalize = 1
filters = 1024
size = 1
stride = 1
pad = 0
activation = relu6

###########

[convolutional]
batch_normalize = 1
filters = 256
size = 1
stride = 1
pad = 1
activation = leaky

[convolutional]
batch_normalize = 1
filters = 512
size = 3
stride = 1
pad = 1
activation = leaky

[convolutional]
size = 1
stride = 1
pad = 1
filters = 255
activation = linear

# prediction 1
[yolo]
mask = 3,4,5
anchors = 10,14,  23,27,  37,58,  81,82,  135,169,  344,319
classes = 80
num = 6
jitter = .3
ignore_thresh = .7
truth_thresh = 1
random = 1

[route]
layers = -4

[convolutional]
batch_normalize = 1
filters = 128
size = 1
stride = 1
pad = 1
activation = leaky

[upsample]
stride = 2

[route]
layers = -1, 8

[convolutional]
batch_normalize = 1
filters = 256
size = 3
stride = 1
pad = 1
activation = leaky

[convolutional]
size = 1
stride = 1
pad = 1
filters = 255
activation = linear

# prediction 2
[yolo]
mask = 0,1,2
anchors = 10,14,  23,27,  37,58,  81,82,  135,169,  344,319
classes = 80
num = 6
jitter = .3
ignore_thresh = .7
truth_thresh = 1
random = 1