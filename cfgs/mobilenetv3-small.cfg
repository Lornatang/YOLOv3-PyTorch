[net]
# Testing
# batch = 1
# subdivisions = 1
# Training
batch = 64
subdivisions = 16
width = 416
height = 416
channels = 3
momentum = 0.9
decay = 0.0005
angle = 0
saturation = 1.5
exposure = 1.5
hue = .1

learning_rate = 0.001
burn_in = 1000
max_batches = 50200
policy = steps
steps = 40000,45000
scales = .1,.1

# ConvBNHSwish
[convolutional]
batch_normalize = 1
filters = 16
size = 3
stride = 2
pad = 1
activation = hswish

# Block 0
# SeModule
[semodule]
in_features = 16
[convolutional]
batch_normalize = 1
filters = 16
size = 1
stride = 1
pad = 0
activation = relu
[convolutional]
batch_normalize = 1
filters = 16
size = 3
stride = 2
pad = 1
groups = 16
activation = relu
[convolutional]
batch_normalize = 1
filters = 16
size = 1
stride = 1
pad = 0
activation = linear

# Block 1
[convolutional]
batch_normalize = 1
filters = 72
size = 1
stride = 1
pad = 0
activation = relu
[convolutional]
batch_normalize = 1
filters = 72
size = 3
stride = 2
pad = 1
groups = 72
activation = relu
[convolutional]
batch_normalize = 1
filters = 24
size = 1
stride = 1
pad = 0
activation = linear

# Block 2
[convolutional]
batch_normalize = 1
filters = 88
size = 1
stride = 1
pad = 0
activation = relu
[convolutional]
batch_normalize = 1
filters = 88
size = 3
stride = 1
pad = 1
groups = 88
activation = relu
[convolutional]
batch_normalize = 1
filters = 24
size = 1
stride = 1
pad = 0
activation = linear

# Block 3
# SeModule
[semodule]
in_features = 40
[convolutional]
batch_normalize = 1
filters = 96
size = 1
stride = 1
pad = 0
activation = hswish
[convolutional]
batch_normalize = 1
filters = 96
size = 5
stride = 2
pad = 2
groups = 96
activation = hswish
[convolutional]
batch_normalize = 1
filters = 40
size = 1
stride = 1
pad = 0
activation = linear

# Block 4
# SeModule
[semodule]
in_features = 40
[convolutional]
batch_normalize = 1
filters = 240
size = 1
stride = 1
pad = 0
activation = hswish
[convolutional]
batch_normalize = 1
filters = 240
size = 5
stride = 1
pad = 2
groups = 240
activation = hswish
[convolutional]
batch_normalize = 1
filters = 40
size = 1
stride = 1
pad = 0
activation = linear

# Block 5
# SeModule
[semodule]
in_features = 40
[convolutional]
batch_normalize = 1
filters = 240
size = 1
stride = 1
pad = 0
activation = hswish
[convolutional]
batch_normalize = 1
filters = 240
size = 5
stride = 1
pad = 2
groups = 240
activation = hswish
[convolutional]
batch_normalize = 1
filters = 40
size = 1
stride = 1
pad = 0
activation = linear

# Block 6
# SeModule
[semodule]
in_features = 48
[convolutional]
batch_normalize = 1
filters = 120
size = 1
stride = 1
pad = 0
activation = hswish
[convolutional]
batch_normalize = 1
filters = 120
size = 5
stride = 1
pad = 2
groups = 120
activation = hswish
[convolutional]
batch_normalize = 1
filters = 48
size = 1
stride = 1
pad = 0
activation = linear
[convolutional]
batch_normalize = 1
in_features = 40
filters = 48
size = 1
stride = 1
pad = 0
activation = linear
[shortcut]
from = -2
activation = linear

# Block 7
# SeModule
[semodule]
in_features = 48
[convolutional]
batch_normalize = 1
filters = 144
size = 1
stride = 1
pad = 0
activation = hswish
[convolutional]
batch_normalize = 1
filters = 144
size = 5
stride = 1
pad = 2
groups = 144
activation = hswish
[convolutional]
batch_normalize = 1
filters = 48
size = 1
stride = 1
pad = 0
activation = linear

# Block 8
# SeModule
[semodule]
in_features = 96
[convolutional]
batch_normalize = 1
filters = 288
size = 1
stride = 1
pad = 0
activation = hswish
[convolutional]
batch_normalize = 1
filters = 288
size = 5
stride = 2
pad = 2
groups = 288
activation = hswish
[convolutional]
batch_normalize = 1
filters = 96
size = 1
stride = 1
pad = 0
activation = linear

# Block 9
# SeModule
[semodule]
in_features = 96
[convolutional]
batch_normalize = 1
filters = 576
size = 1
stride = 1
pad = 0
activation = hswish
[convolutional]
batch_normalize = 1
filters = 576
size = 5
stride = 1
pad = 2
groups = 576
activation = hswish
[convolutional]
batch_normalize = 1
filters = 96
size = 1
stride = 1
pad = 0
activation = linear

# Block 10
# SeModule
[semodule]
in_features = 96
[convolutional]
batch_normalize = 1
filters = 576
size = 1
stride = 1
pad = 0
activation = hswish
[convolutional]
batch_normalize = 1
filters = 576
size = 5
stride = 1
pad = 2
groups = 576
activation = hswish
[convolutional]
batch_normalize = 1
filters = 96
size = 1
stride = 1
pad = 0
activation = linear

[convolutional]
batch_normalize = 1
filters = 576
size = 1
stride = 1
pad = 0
activation = hswish
[dense]
batch_normalize = 1
in_features = 576
out_features = 1280
activation = hswish

###########

[convolutional]
batch_normalize = 1
filters = 512
size = 1
stride = 1
pad = 1
activation = leaky

[convolutional]
batch_normalize = 1
size = 3
stride = 1
pad = 1
filters = 1024
activation = leaky

[convolutional]
batch_normalize = 1
filters = 512
size = 1
stride = 1
pad = 1
activation = leaky

[convolutional]
batch_normalize = 1
size = 3
stride = 1
pad = 1
filters = 1024
activation = leaky

[convolutional]
batch_normalize = 1
filters = 512
size = 1
stride = 1
pad = 1
activation = leaky

[convolutional]
batch_normalize = 1
size = 3
stride = 1
pad = 1
filters = 1024
activation = leaky

[convolutional]
size = 1
stride = 1
pad = 1
filters = 255
activation = linear

# prediction large object
# 13 * 13
[yolo]
mask = 6,7,8
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes = 80
num = 9
jitter = .3
ignore_thresh = .7
truth_thresh = 1
random = 1

[route]
layers = -4

[convolutional]
batch_normalize = 1
filters = 256
size = 1
stride = 1
pad = 1
activation = leaky

[upsample]
stride = 2

[route]
layers = -1, 34

[convolutional]
batch_normalize = 1
filters = 256
size = 1
stride = 1
pad = 1
activation = leaky

[convolutional]
batch_normalize = 1
size = 3
stride = 1
pad = 1
filters = 512
activation = leaky

[convolutional]
batch_normalize = 1
filters = 256
size = 1
stride = 1
pad = 1
activation = leaky

[convolutional]
batch_normalize = 1
size = 3
stride = 1
pad = 1
filters = 512
activation = leaky

[convolutional]
batch_normalize = 1
filters = 256
size = 1
stride = 1
pad = 1
activation = leaky

[convolutional]
batch_normalize = 1
size = 3
stride = 1
pad = 1
filters = 512
activation = leaky

[convolutional]
size = 1
stride = 1
pad = 1
filters = 255
activation = linear

# prediction medium object
# 26 * 26
[yolo]
mask = 3,4,5
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes = 80
num = 9
jitter = .3
ignore_thresh = .7
truth_thresh = 1
random = 1

[route]
layers = -4

[convolutional]
batch_normalize = 1
filters = 128
size = 1
stride = 1
pad = 1
activation = leaky

[upsample]
stride = 2

[route]
layers = -1, 12

[convolutional]
batch_normalize = 1
filters = 128
size = 1
stride = 1
pad = 1
activation = leaky

[convolutional]
batch_normalize = 1
size = 3
stride = 1
pad = 1
filters = 256
activation = leaky

[convolutional]
batch_normalize = 1
filters = 128
size = 1
stride = 1
pad = 1
activation = leaky

[convolutional]
batch_normalize = 1
size = 3
stride = 1
pad = 1
filters = 256
activation = leaky

[convolutional]
batch_normalize = 1
filters = 128
size = 1
stride = 1
pad = 1
activation = leaky

[convolutional]
batch_normalize = 1
size = 3
stride = 1
pad = 1
filters = 256
activation = leaky

[convolutional]
size = 1
stride = 1
pad = 1
filters = 255
activation = linear

# prediction small object
# 52 * 52
[yolo]
mask = 0,1,2
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes = 80
num = 9
jitter = .3
ignore_thresh = .7
truth_thresh = 1
random = 1